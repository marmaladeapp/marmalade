- if @context
  - if @context.class.name == 'Group'
    - edit_timer = edit_group_timer_path(@context,@timer)
    - add_time_sheet = group_timer_time_sheets_path(@context,@timer)
    - new_interval = new_group_timer_interval_path(@context,@timer)

  - else
    - edit_timer = @context.class.name == "Household" ? edit_user_home_timer_path(current_user,@timer) : edit_resource_timer_path(@resource,@timer)
    - add_time_sheet = @context.class.name == "Household" ? user_home_timer_time_sheets_path(current_user,@timer) : resource_timer_time_sheets_path(@resource,@timer)
    - new_interval = @context.class.name == "Household" ? new_user_home_timer_interval_path(current_user,@timer) : new_resource_timer_interval_path(@resource,@timer)

- if @context
  - case @context.class.name
  - when 'User', 'Business'
    - interval_path_array = [@context, @timer, @interval]
    - interval_url = resource_timer_intervals_path(@context, @timer)
    - start_interval = start_resource_timer_intervals_path(@context, @timer)
    - if @timer.intervals.where(:stopped_at => nil, :user => current_user).any?
      - @interval = @timer.intervals.where(:stopped_at => nil, :user => current_user).first
      - stop_interval = stop_resource_timer_interval_path(@context, @timer, @interval)
  - when 'Household'
    - interval_path_array = [@context, @timer, @interval]
    - interval_url = user_home_timer_intervals_path(@user, @timer)
    - start_interval = start_user_home_timer_intervals_path(@user, @timer)
    - if @timer.intervals.where(:stopped_at => nil, :user => current_user).any?
      - @interval = @timer.intervals.where(:stopped_at => nil, :user => current_user).first
      - stop_interval = stop_user_home_timer_interval_path(@user, @timer, @interval)
  - when 'Group'
    - interval_path_array = [@context, @timer, @interval]
    - interval_url = group_timer_intervals_path(@context, @timer)
    - start_interval = start_group_timer_intervals_path(@context, @timer)
    - if @timer.intervals.where(:stopped_at => nil, :user => current_user).any?
      - @interval = @timer.intervals.where(:stopped_at => nil, :user => current_user).first
      - stop_interval = stop_group_timer_interval_path(@context, @timer, @interval)
- else
  - interval_path_array = [@timer, @interval]
  - interval_url = timer_intervals_path(@timer)
  - start_interval = start_timer_intervals_path(@timer)
  - if @timer.intervals.where(:stopped_at => nil, :user => current_user).any?
    - @interval = @timer.intervals.where(:stopped_at => nil, :user => current_user).first
    - stop_interval = stop_timer_interval_path(@timer,@interval)

- if @context
  - case @context.class.name
  - when 'User', 'Business'
    - modify_path_array = [@context, @timer]
    - modify_url = resource_timer_path(@context,@timer)
  - when 'Household'
    - modify_path_array = [@context, @timer]
    - url = user_home_timer_path(@user,@timer)
  - when 'Group'
    - modify_path_array = [@context, @timer]
    - url = group_timer_path(@context,@timer)
- else
  - modify_path_array = @timer
  - url = timer_path(@timer)


.grid-container.small-12.medium-10

  .grid-content.small-12
    %section.block-list
      %header Time sheets
      %ul
        %li.clearfix{:style => 'padding:10px;'}
          - @timer.time_sheets.each do |time_sheet|
            - if time_sheet.owner.class.name == "Group"
              - canonical_time_sheet = group_time_sheet_path(time_sheet.owner,time_sheet)
            - else
              - canonical_time_sheet = time_sheet.owner.class.name == "Household" ? user_home_time_sheet_path(current_user,time_sheet) : resource_time_sheet_path(time_sheet.owner,time_sheet)
            .float-left{:style => ''}
              %a.burnt-toast{:href => canonical_time_sheet}
                %strong= time_sheet.name

            = form_for modify_path_array, :url => modify_url, :html => {:style => 'float:left;'} do |f|
              = f.fields_for :owners, @timer.owners.find_by(:owner => time_sheet) do |ff|
                = ff.hidden_field :_destroy, :value => 'true'
              %button.button.tiny.strawberry-jam{:type => 'submit', :name => 'commit', :style => 'background:none;border:none;margin:0;'}
                %i.fa.fa-trash

              - unless time_sheet == @timer.time_sheets.last
                %span{:style => 'padding:0 10px 0 7px;'}
                  |
          .float-left.v-align{:style => ''}
            .align-center.text-center{:style => 'width:40px;'}
              %a.burnt-toast{:href => add_time_sheet}
                %i.fa.fa-plus-circle.fa-lg

  .grid-content.small-12
    %h3
      = @timer.name
      %a.olive{:href => edit_timer}
        %i.fa.fa-fw.fa-pencil
    %p= @timer.description

    - if @timer.intervals.where(:stopped_at => nil, :user => current_user).any?
      %h2.text-center
        = timer(@interval.started_at - @timer.elapsed_time.seconds)
        - if @timer.assigned?(current_user)
          %div{:style => 'display:inline-block;'}
            = form_for interval_path_array, :url => stop_interval, :method => :patch do |f|
              = f.hidden_field :user_id, :value => current_user.id
              %button.button.expanded.bg-strawberry-jam Stop
    - else
      - seconds = @timer.elapsed_time.to_i % 60
      - minutes = (@timer.elapsed_time.to_i / 60) % 60
      - hours = @timer.elapsed_time.to_i / (60 * 60)
      %h2.text-center
        = format("%02d:%02d:%02d", hours, minutes, seconds)

        - if @timer.assigned?(current_user)
          %div{:style => 'display:inline-block;'}
            = form_for interval_path_array, :url => start_interval do |f|
              = f.hidden_field :user_id, :value => current_user.id
              %button.button.expanded.bg-blueberry Start

      %h3.text-center= "%.2f" % (BigDecimal.new(@timer.elapsed_time.to_i) / (60 * 60)) + " hours"
    %hr

  .grid-block.wrap.small-12
    .grid-content.small-12
      %h4 Assigned to

      %div.clearfix{:style => 'margin-top:20px;margin-bottom:20px;'}
        - @timer.memberships.each do |membership|
          .float-left{:style => 'margin-left:5px;'}
            %a{:href => request.path + "/assignees/" + membership.id.to_s + "/edit"}
              %img{:src => avatar_url(membership.member,60), :style => 'border-radius:50%;'}

        - unless @timer.memberships.any?
          .float-left.v-align{:style => 'height:60px;margin-left:5px;'}
            .align-center.text-center{:style => 'width:40px;'}
              - case @context.class.name
              - when "Household"
                %a.burnt-toast{:href => new_user_home_timer_assignee_path(current_user,@timer)}
                  %i.fa.fa-plus-circle.fa-lg
              - when "Group"
                %a.burnt-toast{:href => new_group_timer_assignee_path(@context,@timer)}
                  %i.fa.fa-plus-circle.fa-lg
              - else
                %a.burnt-toast{:href => new_resource_timer_assignee_path(@context,@timer)}
                  %i.fa.fa-plus-circle.fa-lg

  - if @timer.assigned?(current_user)
    .grid-content.small-12.text-center
      %a.button.bg-green{:href => new_interval} Add new interval

  .grid-content.small-12
    - range = ['Active']

    - first_not_nil = @intervals.find { |x| !x["stopped_at"].blank? }
    - start_date = first_not_nil ? first_not_nil.stopped_at.to_date : Date.current
    - end_date = @intervals.last && @intervals.last.stopped_at ? @intervals.last.stopped_at.to_date : Date.current

    - (start_date.downto(end_date)).each do |date|
      - range << date

    - range.each do |active_or_date|
      %h4.clearfix
        - if active_or_date == 'Active'
          %span.pull-left= active_or_date
        - else
          %span.pull-left= active_or_date.strftime("%A")
          %span.silver.pull-right= active_or_date.strftime("%-d %b")
      - if !([active_or_date] & @intervals.group_by(&:active_or_day).keys).empty?
        - @intervals.group_by(&:active_or_day).slice(active_or_date).each do |active_or_day, intervals|
          %ol{:style => 'list-style:none;margin:0;'}= render partial: 'app/time/intervals/interval', collection: intervals
      - else
        %p 
          %em.silver No records

  .grid-content.small-12{:style => 'padding:10px 0 20px 0;'}
    .text-center= paginate @intervals

