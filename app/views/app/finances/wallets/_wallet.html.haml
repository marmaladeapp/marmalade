.grid-content.small-12.medium-6.large-4
  - if wallet.context.present? && wallet.context.class.name == "Household"
    - canonical_link = user_home_wallet_path(current_user,wallet)
  - else
    - case wallet.owners.first.owner.class.name
    - when "User", "Business"
      - canonical_link = resource_wallet_path(wallet.owners.first.owner,wallet)
    - when "Household"
      - canonical_link = user_home_wallet_path(current_user,wallet)
    - when "Group"
      - canonical_link = group_wallet_path(wallet.owners.first.owner,wallet)
  %a{:href => canonical_link}
    .card{:style => 'height:250px;'}
      .card-section.bg-panther
        %h4.ice-cream.clearfix{:style => 'margin-top:0;margin-bottom:0;'}
          %span.float-left{:style => 'width:80%;overflow:hidden;'}= truncate(wallet.name, length: 12)
          %span.float-right
            %i.fa.fa-money
      .card-divider.bg-ice-cream.burnt-toast
        - if wallet.context && wallet.context.class.name == "Household"
          %i.fa.fa-home
          = truncate(wallet.context.name, length: 15)
        - else
          - case wallet.owners.first.owner.class.name
          - when "User"
            %i.fa.fa-user
          - when "Business"
            %i.fa.fa-briefcase
          - when "Group"
            %i.fa.fa-users
          = truncate(wallet.owners.first.owner.name, length: 15)
      .card-section
        - if wallet.present?
          - currency_symbol = Money::Currency.new(wallet.currency).symbol
          - currency_format = "#{currency_symbol}#,##0.00;(#{currency_symbol}#,##0.00)" # for BTC for instance - 8 decimal places
          - if wallet.payments.any?
            - if wallet.payments.first.created_at > 1.hour.ago
              .ct-chart.wallet-chart-mini.ct-major-eleventh{'data-walletId' => wallet.id.to_s, 'data-interval' => "minutely", :id => "wallet" + wallet.id.to_s}
            - elsif wallet.payments.first.created_at > 1.week.ago
              .ct-chart.wallet-chart-mini.ct-major-eleventh{'data-walletId' => wallet.id.to_s, 'data-interval' => "hourly", :id => "wallet" + wallet.id.to_s}
            - elsif wallet.payments.first.created_at > 1.month.ago
              .ct-chart.wallet-chart-mini.ct-major-eleventh{'data-walletId' => wallet.id.to_s, 'data-interval' => "daily", :id => "wallet" + wallet.id.to_s}
            - elsif wallet.payments.first.created_at > 1.year.ago
              .ct-chart.wallet-chart-mini.ct-major-eleventh{'data-walletId' => wallet.id.to_s, 'data-interval' => "weekly", :id => "wallet" + wallet.id.to_s}
            - else
              .ct-chart.wallet-chart-mini.ct-major-eleventh{'data-walletId' => wallet.id.to_s, 'data-interval' => "monthly", :id => "wallet" + wallet.id.to_s}
          - else
            - if wallet.created_at > 1.hour.ago
              .ct-chart.wallet-chart-mini.ct-major-eleventh{'data-walletId' => wallet.id.to_s, 'data-interval' => "minutely", :id => "wallet" + wallet.id.to_s}
            - elsif wallet.created_at > 1.week.ago
              .ct-chart.wallet-chart-mini.ct-major-eleventh{'data-walletId' => wallet.id.to_s, 'data-interval' => "hourly", :id => "wallet" + wallet.id.to_s}
            - elsif wallet.created_at > 1.month.ago
              .ct-chart.wallet-chart-mini.ct-major-eleventh{'data-walletId' => wallet.id.to_s, 'data-interval' => "daily", :id => "wallet" + wallet.id.to_s}
            - elsif wallet.created_at > 1.year.ago
              .ct-chart.wallet-chart-mini.ct-major-eleventh{'data-walletId' => wallet.id.to_s, 'data-interval' => "weekly", :id => "wallet" + wallet.id.to_s}
            - else
              .ct-chart.wallet-chart-mini.ct-major-eleventh{'data-walletId' => wallet.id.to_s, 'data-interval' => "monthly", :id => "wallet" + wallet.id.to_s}

        - if false
          - if !wallet.description.blank?
            = truncate(wallet.description, length: 75)
          - else
            %em No description.

        .text-center
          %strong Balance:
          = humanized_money_with_symbol "#{wallet.currency} #{wallet.balance}".to_money
